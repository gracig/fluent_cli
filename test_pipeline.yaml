name: my_pipeline
steps:
  - !Command
      name: create_story
      command: fluent openai 'tell me a story about ${input}.  Only use double quotes'
      save_output: raw_data
  - !Command
        name: create_image_prompt
        command: |
          fluent openai-mini 'create a dalle image prompt that captures the essence of this text, only use double quotes:' <<EOF
          ${raw_data}
          EOF
        save_output: image_prompt_data
  - !ShellCommand
      name: extract_theme
      command: |
        fluent openai 'give me up to 5 words describing the theme of this text, output as a comma-separated list: ' <<EOF
        ${raw_data}
        EOF
      save_output: theme_data
  - !ShellCommand
      name: generate_image
      command: fluent dalleVertical '${image_prompt_data}' --download-media ~/Downloads
      save_output: generated_image
  - !ShellCommand
      name: extract_summary
      command: |
        fluent openai-mini 'summarize the sentiment of this text in less than 3 words.  Only output the words. ' <<EOF
        ${raw_data}
        EOF
      save_output: sentiment_data
  - !ShellCommand
      name: extract_semantics
      command: |
        fluent openai-mini 'summarize the semantic meaning of this text in less than 5 words.  Only output the words. ' <<EOF
        ${raw_data}
        EOF
      save_output: semantic_data
  - !ShellCommand
      name: debug_variables
      command: |
        echo "raw_data: ${raw_data}"
        echo "theme_data: ${theme_data}"
      save_output: debug_output
  - !ShellCommand
      name: count_words
      command: |
        wc -w <<< "${theme_data}" | awk '{print $1}'
      save_output: word_count
  - !Condition
      name: validate_data
      condition: "[ ${word_count} -le 5 ]"
      if_true: |
        echo "Theme data is correct"
      if_false: |
        echo "Theme data is not correct"